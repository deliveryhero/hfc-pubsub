"use strict";(self.webpackChunk_honestfoodcompany_pubsub=self.webpackChunk_honestfoodcompany_pubsub||[]).push([[3642],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),u=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(a.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=u(r),d=i,f=b["".concat(a,".").concat(d)]||b[d]||l[d]||s;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=b;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},945:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>c,contentTitle:()=>a,metadata:()=>u,toc:()=>p,default:()=>b});var n=r(7462),i=r(3366),s=(r(7294),r(3905)),o=["components"],c={id:"service",title:"Subscription Service",sidebar_position:0},a=void 0,u={unversionedId:"server/service",id:"server/service",isDocsHomePage:!1,title:"Subscription Service",description:"Extend and customize the behavior of the subscription server in the subscription.service file. Initialize a database connection, register subscribers, and define default subscriber options in the subscription service file.",source:"@site/docs/server/Service.md",sourceDirName:"server",slug:"/server/service",permalink:"/hfc-pubsub/server/service",editUrl:"https://github.com/deliveryhero/hfc-pubsub/edit/main/docs/server/Service.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"service",title:"Subscription Service",sidebar_position:0},sidebar:"defaultSidebar",previous:{title:"Different GCP project",permalink:"/hfc-pubsub/publishing/publish-diff-project"},next:{title:"Custom Logger",permalink:"/hfc-pubsub/server/custom-logger"}},p=[{value:"Typescript example",id:"typescript-example",children:[],level:2},{value:"Javascript Example",id:"javascript-example",children:[],level:2},{value:"Running the Service",id:"running-the-service",children:[],level:2}],l={toc:p};function b(e){var t=e.components,r=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Extend and customize the behavior of the subscription server in the ",(0,s.kt)("inlineCode",{parentName:"p"},"subscription.service")," file. Initialize a database connection, register subscribers, and ",(0,s.kt)("strong",{parentName:"p"},"define default subscriber")," options in the subscription service file."),(0,s.kt)("h2",{id:"typescript-example"},"Typescript example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/pubsub/subscription.service.ts"',title:'"/pubsub/subscription.service.ts"'},"import * as PubSub from '@honestfoodcompany/pubsub';\nimport { SubscriberOptions } from '@honestfoodcompany/pubsub';\n\nexport default class SubscriptionService extends PubSub.SubscriptionService {\n  static subscribers = [\n    /**\n     * if your subscribers don't have the .sub.js suffix\n     * they won't be auto-loaded,  so you can include their default\n     * export in  this array\n     */\n  ];\n\n  static defaultSubscriberOptions: SubscriberOptions = {\n    /**\n     * Define project level default subscriber options here.\n     * These options can be overridden by options defined in subscribers\n     */\n  };\n\n  static async init(): Promise<void> {\n    /**\n     * This function is called when the subscription server starts.\n     * This is a good place to initialize a database connection\n     */\n  }\n}\n")),(0,s.kt)("h2",{id:"javascript-example"},"Javascript Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/pubsub/subscription.service.js"',title:'"/pubsub/subscription.service.js"'},"const PubSub = require('@honestfoodcompany/pubsub');\n\nclass SubscriptionService extends PubSub.SubscriptionService {}\n\nSubscriptionService.subscribers = [\n  /**\n   * if your subscribers don't have the .sub.js suffix\n   * they won't be auto-loaded,  so you can include their default\n   * export in  this array\n   */\n];\n\nSubscriptionService.defaultSubscriberOptions = {\n  /**\n   * Define project-level default subscriber options here.\n   * These options can be overridden by options defined in subscribers\n   */\n};\n\nSubscriptionService.init = () => {\n  /**\n   * This function is called when the subscription server starts.\n   * This is a good place to initialize a database connection\n   */\n};\n\nexports.default = SubscriptionService;\n")),(0,s.kt)("h2",{id:"running-the-service"},"Running the Service"),(0,s.kt)("p",null,"To run the service you can use the ",(0,s.kt)("a",{parentName:"p",href:"/hfc-pubsub/guides/cli"},"CLI")," commands:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"npx subscriptions start\n")))}b.isMDXComponent=!0}}]);