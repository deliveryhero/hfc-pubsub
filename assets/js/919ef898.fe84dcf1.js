"use strict";(self.webpackChunk_honestfoodcompany_pubsub=self.webpackChunk_honestfoodcompany_pubsub||[]).push([[2198],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var i=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=i.createContext({}),l=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(n),g=o,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||s;return n?i.createElement(m,r(r({ref:t},c),{},{components:n})):i.createElement(m,r({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,r[1]=a;for(var l=2;l<s;l++)r[l]=n[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5076:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var i=n(8168),o=n(8587),s=(n(6540),n(5680)),r=["components"],a={id:"cli",title:"CLI",sidebar_position:5},p={unversionedId:"cli",id:"version-v1/cli",isDocsHomePage:!1,title:"CLI",description:"Prerequisites npm i -g npx",source:"@site/versioned_docs/version-v1/CLI.md",sourceDirName:".",slug:"/cli",permalink:"/hfc-pubsub/v1/cli",editUrl:"https://github.com/deliveryhero/hfc-pubsub/edit/main/versioned_docs/version-v1/CLI.md",version:"v1",sidebarPosition:5,frontMatter:{id:"cli",title:"CLI",sidebar_position:5},sidebar:"version-v1/defaultSidebar",previous:{title:"Health Checks",permalink:"/hfc-pubsub/v1/server/health-check"},next:{title:"PubSub Drivers",permalink:"/hfc-pubsub/v1/drivers"}},l=[{value:"CLI Options",id:"cli-options",children:[{value:"Subscriptions List",id:"subscriptions-list",children:[]},{value:"Subscriptions Start",id:"subscriptions-start",children:[]},{value:"Development Environment",id:"development-environment",children:[]}]}],c={toc:l};function u(e){var t=e.components,n=(0,o.A)(e,r);return(0,s.yg)("wrapper",(0,i.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.yg)("div",{parentName:"div",className:"admonition-heading"},(0,s.yg)("h5",{parentName:"div"},(0,s.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,s.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.yg)("div",{parentName:"div",className:"admonition-content"},(0,s.yg)("p",{parentName:"div"},"  Prerequisites: Install npx if you don't have it installed yet: ",(0,s.yg)("inlineCode",{parentName:"p"},"npm i -g npx")))),(0,s.yg)("table",null,(0,s.yg)("thead",{parentName:"table"},(0,s.yg)("tr",{parentName:"thead"},(0,s.yg)("th",{parentName:"tr",align:null},"Command"),(0,s.yg)("th",{parentName:"tr",align:null},"Description"))),(0,s.yg)("tbody",{parentName:"table"},(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"npx subscriptions list")),(0,s.yg)("td",{parentName:"tr",align:null},"lists project subscriptions")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},(0,s.yg)("inlineCode",{parentName:"td"},"npx subscriptions start")),(0,s.yg)("td",{parentName:"tr",align:null},"starts project subscriptions")))),(0,s.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.yg)("div",{parentName:"div",className:"admonition-heading"},(0,s.yg)("h5",{parentName:"div"},(0,s.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,s.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.yg)("div",{parentName:"div",className:"admonition-content"},(0,s.yg)("p",{parentName:"div"},"  Alternatively the CLI can be found at ",(0,s.yg)("inlineCode",{parentName:"p"},"./node_modules/.bin/subscriptions")))),(0,s.yg)("h2",{id:"cli-options"},"CLI Options"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"Options:\n  --help                            Show help                                                   [boolean]\n  --version                         Show version number                                         [boolean]\n  --project-id                      Google project id                                           [string]\n  --root-dir                        Path where pubsub folder resides                            [string]\n  --project-number                  (Optional) project number for the project                   [string]\n  --driver                          Use value `synchronous` or leave it to default              [string]\n  --google-application-credentials  Path to exported credentials file                           [string]\n  --server-port                     Port at which http health server would run (default:8080)   [number]                                                                      [string]\n  --health-server                   If `true` runs server telling health state of subscriptions [boolean]\n")),(0,s.yg)("h3",{id:"subscriptions-list"},"Subscriptions List"),(0,s.yg)("p",null,"This will output a table of all subscriptions and their descriptions. Example output:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"$ npx subscriptions list\n\n Google Pub/Sub Subscriptions\nTopic name   Subscription name                                Description\nsimple.topic simple.topic.console-log.subscriptionWithOptions Will console log messages published on test.topic\ntest.topic   test.topic.console-log                           Will console log messages published on test.topic\ntest.topic   test.topic.console-log.v2                        Will console log messages published on test.topic\n")),(0,s.yg)("h3",{id:"subscriptions-start"},"Subscriptions Start"),(0,s.yg)("p",null,"This will start a subscription service using the ",(0,s.yg)("inlineCode",{parentName:"p"},"subscription.service.{js/ts}")," file in your ",(0,s.yg)("inlineCode",{parentName:"p"},"PUBSUB_ROOT_DIR"),". It will first call the ",(0,s.yg)("inlineCode",{parentName:"p"},"init")," method of the Service class and then start the subscriptions, allowing you to do any startup tasks. Read more about ",(0,s.yg)("a",{parentName:"p",href:"/hfc-pubsub/v1/server/service"},"service here")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"$ npx subscriptions start\n\nStarting Google Pub/Sub Subscriptions Server\n[2021-08-27 10:16:26.824 +0530] INFO: ***** INIT CALLED *****\n[2021-08-27 10:16:26.824 +0530] INFO: Connecting to DB\n[2021-08-27 10:16:27.829 +0530] INFO: Connected to DB\n[2021-08-27 10:16:27.830 +0530] INFO: ***** INIT CALLED *****\n[2021-08-27 10:16:29.515 +0530] INFO:    \u2714\ufe0f      simple.topic.console-log.subscriptionWithOptions already exists.\n[2021-08-27 10:16:43.766 +0530] INFO:    \ud83d\udced     simple.topic.console-log.subscriptionWithOptions is ready to receive messages at a controlled volume of 100 messages.\n[2021-08-27 10:16:44.887 +0530] INFO:    \u2714\ufe0f      test.topic.console-log already exists.\n[2021-08-27 10:16:49.395 +0530] INFO:    \ud83d\udced     test.topic.console-log is ready to receive messages at a controlled volume of 5 messages.\n[2021-08-27 10:16:51.349 +0530] INFO:    \u2714\ufe0f      test.topic.console-log.v2 already exists.\n[2021-08-27 10:17:03.902 +0530] INFO:    \ud83d\udced     test.topic.console-log.v2 is ready to receive messages at a controlled volume of 5 messages.\n[2021-08-27 10:17:03.902 +0530] INFO:    \u2705      All subscriptions started successfully.\n\n")),(0,s.yg)("h3",{id:"development-environment"},"Development Environment"),(0,s.yg)("p",null,"For local use you may want to call the CLI with ts-node instead of directly if you are using typescript."),(0,s.yg)("h4",{id:"usage-with-typescript"},"Usage with Typescript"),(0,s.yg)("p",null,"For use with Typescript, update your local ",(0,s.yg)("inlineCode",{parentName:"p"},"PUBSUB_ROOT_DIR")," env var to the src directory of the project with the typescript files."),(0,s.yg)("p",null,"And instead of using ",(0,s.yg)("inlineCode",{parentName:"p"},"npx subscriptions start")," you can invoke the bin script with ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node/"},"ts-node"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"npx ts-node ./node_modules/.bin/subscriptions start\n")),(0,s.yg)("p",null,"If you have a separate ",(0,s.yg)("inlineCode",{parentName:"p"},"tsconfig")," for your server code then you should pass it to ",(0,s.yg)("inlineCode",{parentName:"p"},"ts-node"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"npx ts-node --project tsconfig.server.json ./node_modules/.bin/subscriptions start\n")),(0,s.yg)("p",null,"To make this easier you can add a script in your ",(0,s.yg)("inlineCode",{parentName:"p"},"package.json"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "pubsub": "ts-node ./node_modules/.bin/subscriptions start"\n  }\n}\n')),(0,s.yg)("h4",{id:"use-debugger-with-typescript"},"Use Debugger with Typescript"),(0,s.yg)("p",null,(0,s.yg)("inlineCode",{parentName:"p"},"ts-node")," doesn't have an ",(0,s.yg)("inlineCode",{parentName:"p"},"--inspect")," option unlike the ",(0,s.yg)("inlineCode",{parentName:"p"},"node")," cli. But we can still pass it to the node process by way of the ",(0,s.yg)("inlineCode",{parentName:"p"},"NODE_OPTIONS")," env var."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"NODE_OPTIONS='--inspect' ts-node --project tsconfig.server.json  ./node_modules/.bin/subscriptions start\n")),(0,s.yg)("h4",{id:"watch-mode-with-typescript"},"Watch Mode with Typescript"),(0,s.yg)("p",null,"You can use ",(0,s.yg)("inlineCode",{parentName:"p"},"nodemon")," in combination with ",(0,s.yg)("inlineCode",{parentName:"p"},"ts-node")," to develop in watch mode:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "pubsub": "nodemon --exec \\"NODE_OPTIONS=\'--inspect\' ts-node --project tsconfig.server.json ./node_modules/.bin/subscriptions start\\""\n  }\n}\n')))}u.isMDXComponent=!0}}]);