"use strict";(self.webpackChunk_honestfoodcompany_pubsub=self.webpackChunk_honestfoodcompany_pubsub||[]).push([[7876],{5680:(e,r,n)=>{n.d(r,{xA:()=>b,yg:()=>d});var t=n(6540);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=t.createContext({}),c=function(e){var r=t.useContext(o),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},b=function(e){var r=c(e.components);return t.createElement(o.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,g=u["".concat(o,".").concat(d)]||u[d]||p[d]||a;return n?t.createElement(g,s(s({ref:r},b),{},{components:n})):t.createElement(g,s({ref:r},b))}));function d(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=u;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5470:(e,r,n)=>{n.r(r),n.d(r,{default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=n(8168),i=n(8587),a=(n(6540),n(5680)),s=["components"],l={id:"labels",title:"Adding Labels",sidebar_label:"Labels",sidebar_position:2},o={unversionedId:"subscribing/labels",id:"subscribing/labels",isDocsHomePage:!1,title:"Adding Labels",description:"Global Labels",source:"@site/docs/subscribing/Labels.md",sourceDirName:"subscribing",slug:"/subscribing/labels",permalink:"/hfc-pubsub/subscribing/labels",editUrl:"https://github.com/deliveryhero/hfc-pubsub/edit/main/docs/subscribing/Labels.md",version:"current",sidebar_label:"Labels",sidebarPosition:2,frontMatter:{id:"labels",title:"Adding Labels",sidebar_label:"Labels",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Internal Error Handling",permalink:"/hfc-pubsub/subscribing/error-handling"},next:{title:"Subscriptions with Retry Policy",permalink:"/hfc-pubsub/subscribing/retry-policy"}},c=[{value:"Global Labels",id:"global-labels",children:[{value:"Env Var",id:"env-var",children:[]}]},{value:"Subscriber Specific Labels",id:"subscriber-specific-labels",children:[]}],b={toc:c};function p(e){var r=e.components,n=(0,i.A)(e,s);return(0,a.yg)("wrapper",(0,t.A)({},b,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"global-labels"},"Global Labels"),(0,a.yg)("p",null,"Subscription Service can have global labels in ",(0,a.yg)("inlineCode",{parentName:"p"},"defaultSubscriberOptions"),", these will be merged with local subscriber level ",(0,a.yg)("inlineCode",{parentName:"p"},"labels"),"."),(0,a.yg)("h3",{id:"env-var"},"Env Var"),(0,a.yg)("p",null,"We also support ",(0,a.yg)("inlineCode",{parentName:"p"},"GOOGLE_CLOUD_LABELS")," env var which can be a stringified JSON. These work as the default labels added to each subscription. Example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'# .env file\nGOOGLE_CLOUD_LABELS=\'{"service": "hfc-pubsub", "env": "prod"}\'\n')),(0,a.yg)("h2",{id:"subscriber-specific-labels"},"Subscriber Specific Labels"),(0,a.yg)("p",null,"Each subscriber can also add it's own labels, these overwrite the above mentioned Global Labels."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"const TestSubscription: SubscriberObject<Payload> = {\n  topicName: 'test-topic',\n  subscriptionName: 'test-topic.example.subscription',\n  description: 'Just a test subscription',\n\n  options: {\n    labels: {\n      tribe: 'GFS',\n      service: 'pubsub',\n    },\n  },\n\n  async handleMessage(message): Promise<void> {\n    const payload = message.toJSON();\n    console.log(payload);\n    message.ack();\n  },\n};\n")))}p.isMDXComponent=!0}}]);