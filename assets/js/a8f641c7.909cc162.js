"use strict";(self.webpackChunk_honestfoodcompany_pubsub=self.webpackChunk_honestfoodcompany_pubsub||[]).push([[9200],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>y});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=n.createContext({}),p=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(a.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},b=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(t),y=i,f=b["".concat(a,".").concat(y)]||b[y]||u[y]||o;return t?n.createElement(f,s(s({ref:r},l),{},{components:t})):n.createElement(f,s({ref:r},l))}));function y(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=b;var c={};for(var a in r)hasOwnProperty.call(r,a)&&(c[a]=r[a]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}b.displayName="MDXCreateElement"},3315:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>c,contentTitle:()=>a,metadata:()=>p,toc:()=>l,default:()=>b});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),s=["components"],c={id:"retry-policy",title:"Subscriptions with Retry Policy",sidebar_label:"Retry Policy",sidebar_position:2},a=void 0,p={unversionedId:"subscribing/retry-policy",id:"version-v1/subscribing/retry-policy",isDocsHomePage:!1,title:"Subscriptions with Retry Policy",description:"It is possible to define a retry configuration for a subscription:",source:"@site/versioned_docs/version-v1/subscribing/Retry Policy.md",sourceDirName:"subscribing",slug:"/subscribing/retry-policy",permalink:"/hfc-pubsub/v1/subscribing/retry-policy",editUrl:"https://github.com/deliveryhero/hfc-pubsub/edit/main/versioned_docs/version-v1/subscribing/Retry Policy.md",tags:[],version:"v1",sidebarPosition:2,frontMatter:{id:"retry-policy",title:"Subscriptions with Retry Policy",sidebar_label:"Retry Policy",sidebar_position:2},sidebar:"version-v1/defaultSidebar",previous:{title:"Error Handling",permalink:"/hfc-pubsub/v1/subscribing/error-handling"},next:{title:"Message Ordering",permalink:"/hfc-pubsub/v1/subscribing/message-ordering"}},l=[],u={toc:l};function b(e){var r=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"It is possible to define a retry configuration for a subscription:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/pubsub/subscriptions/simple.topic.name.subscription.sub.js"',title:'"/pubsub/subscriptions/simple.topic.name.subscription.sub.js"'},"exports.default = {\n  topicName: 'test.topic',\n  subscriptionName: 'test.topic.sub',\n  description: 'Will console log messages published on test.topic',\n  options: {\n    retryPolicy: {\n      minimumBackoff: { seconds: 20, nanos: 20 },\n      maximumBackoff: { seconds: 400, nanos: 2 },\n    },\n  },\n  handleMessage: function (message) {\n    console.log(`received a message on ${this.subscriptionName}`);\n    console.log(message.data.toString());\n  },\n};\n")))}b.isMDXComponent=!0}}]);