"use strict";(self.webpackChunk_honestfoodcompany_pubsub=self.webpackChunk_honestfoodcompany_pubsub||[]).push([[2013],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),p=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(r),y=i,f=b["".concat(a,".").concat(y)]||b[y]||u[y]||o;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=b;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},7249:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>c,contentTitle:()=>a,metadata:()=>p,toc:()=>l,default:()=>b});var n=r(3117),i=r(102),o=(r(7294),r(3905)),s=["components"],c={id:"retry-policy",title:"Subscriptions with Retry Policy",sidebar_label:"Retry Policy",sidebar_position:2},a=void 0,p={unversionedId:"subscribing/retry-policy",id:"subscribing/retry-policy",isDocsHomePage:!1,title:"Subscriptions with Retry Policy",description:"It is possible to define a retry configuration for a subscription:",source:"@site/docs/subscribing/Retry Policy.md",sourceDirName:"subscribing",slug:"/subscribing/retry-policy",permalink:"/hfc-pubsub/subscribing/retry-policy",editUrl:"https://github.com/deliveryhero/hfc-pubsub/edit/main/docs/docs/subscribing/Retry Policy.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"retry-policy",title:"Subscriptions with Retry Policy",sidebar_label:"Retry Policy",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Dead Letter Policy",permalink:"/hfc-pubsub/subscribing/dead-letter-policy"},next:{title:"Message Ordering",permalink:"/hfc-pubsub/subscribing/message-ordering"}},l=[],u={toc:l};function b(e){var t=e.components,r=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"It is possible to define a retry configuration for a subscription:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/pubsub/subscriptions/simple.topic.name.subscription.sub.js"',title:'"/pubsub/subscriptions/simple.topic.name.subscription.sub.js"'},"exports.default = {\n  topicName: 'test.topic',\n  subscriptionName: 'test.topic.sub',\n  description: 'Will console log messages published on test.topic',\n  options: {\n    retryPolicy: {\n      minimumBackoff: { seconds: 20, nanos: 20 },\n      maximumBackoff: { seconds: 400, nanos: 2 },\n    },\n  },\n  handleMessage: function (message) {\n    console.log(`received a message on ${this.subscriptionName}`);\n    console.log(message.data.toString());\n  },\n};\n")))}b.isMDXComponent=!0}}]);